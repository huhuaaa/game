define('webpack/node_modules/watchpack/node_modules/chokidar/node_modules/fsevents/node_modules/gauge/themes', function(require, exports, module) {

  'use strict';
  var consoleControl = require('webpack/node_modules/watchpack/node_modules/chokidar/node_modules/fsevents/node_modules/console-control-strings/index');
  var ThemeSet = require('webpack/node_modules/watchpack/node_modules/chokidar/node_modules/fsevents/node_modules/gauge/theme-set');
  
  var themes = module.exports = new ThemeSet();
  
  themes.addTheme('ASCII', {
    preProgressbar: '[',
    postProgressbar: ']',
    progressbarTheme: {
      complete: '#',
      remaining: '.'
    },
    activityIndicatorTheme: '-\\|/',
    preSubsection: '>'
  });
  
  themes.addTheme('colorASCII', themes.getTheme('ASCII'), {
    progressbarTheme: {
      preComplete: consoleControl.color('inverse'),
      complete: ' ',
      postComplete: consoleControl.color('stopInverse'),
      preRemaining: consoleControl.color('brightBlack'),
      remaining: '.',
      postRemaining: consoleControl.color('reset')
    }
  });
  
  themes.addTheme('brailleSpinner', {
    preProgressbar: '⸨',
    postProgressbar: '⸩',
    progressbarTheme: {
      complete: '░',
      remaining: '⠂'
    },
    activityIndicatorTheme: '⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏',
    preSubsection: '>'
  });
  
  themes.addTheme('colorBrailleSpinner', themes.getTheme('brailleSpinner'), {
    progressbarTheme: {
      preComplete: consoleControl.color('inverse'),
      complete: ' ',
      postComplete: consoleControl.color('stopInverse'),
      preRemaining: consoleControl.color('brightBlack'),
      remaining: '░',
      postRemaining: consoleControl.color('reset')
    }
  });
  
  themes.setDefault({}, 'ASCII');
  themes.setDefault({ hasColor: true }, 'colorASCII');
  themes.setDefault({ platform: 'darwin', hasUnicode: true }, 'brailleSpinner');
  themes.setDefault({ platform: 'darwin', hasUnicode: true, hasColor: true }, 'colorBrailleSpinner');

});
