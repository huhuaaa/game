define('webpack/node_modules/watchpack/node_modules/chokidar/node_modules/fsevents/node_modules/are-we-there-yet/tracker-stream', function(require, exports, module) {

  'use strict';
  var util = require('webpack/node_modules/node-libs-browser/node_modules/util/util');
  var stream = require('webpack/node_modules/memory-fs/node_modules/readable-stream/readable');
  var delegate = require('webpack/node_modules/watchpack/node_modules/chokidar/node_modules/fsevents/node_modules/delegates/index');
  var Tracker = require('webpack/node_modules/watchpack/node_modules/chokidar/node_modules/fsevents/node_modules/are-we-there-yet/tracker');
  
  var TrackerStream = module.exports = function (name, size, options) {
    stream.Transform.call(this, options);
    this.tracker = new Tracker(name, size);
    this.name = name;
    this.id = this.tracker.id;
    this.tracker.on('change', delegateChange(this));
  };
  util.inherits(TrackerStream, stream.Transform);
  
  function delegateChange(trackerStream) {
    return function (name, completion, tracker) {
      trackerStream.emit('change', name, completion, trackerStream);
    };
  }
  
  TrackerStream.prototype._transform = function (data, encoding, cb) {
    this.tracker.completeWork(data.length ? data.length : 1);
    this.push(data);
    cb();
  };
  
  TrackerStream.prototype._flush = function (cb) {
    this.tracker.finish();
    cb();
  };
  
  delegate(TrackerStream.prototype, 'tracker').method('completed').method('addWork');

});
