define('webpack/node_modules/watchpack/node_modules/chokidar/node_modules/fsevents/node_modules/gauge/wide-truncate', function(require, exports, module) {

  'use strict';
  var stringWidth = require('webpack/node_modules/watchpack/node_modules/chokidar/node_modules/fsevents/node_modules/string-width/index');
  var stripAnsi = require('babel-core/node_modules/babel-code-frame/node_modules/chalk/node_modules/strip-ansi/index');
  
  module.exports = wideTruncate;
  
  function wideTruncate(str, target) {
    if (stringWidth(str) === 0) return str;
    if (target <= 0) return '';
    if (stringWidth(str) <= target) return str;
  
    // We compute the number of bytes of ansi sequences here and add
    // that to our initial truncation to ensure that we don't slice one
    // that we want to keep in half.
    var noAnsi = stripAnsi(str);
    var ansiSize = str.length + noAnsi.length;
    var truncated = str.slice(0, target + ansiSize);
  
    // we have to shrink the result to account for our ansi sequence buffer
    // (if an ansi sequence was truncated) and double width characters.
    while (stringWidth(truncated) > target) {
      truncated = truncated.slice(0, -1);
    }
    return truncated;
  }

});
