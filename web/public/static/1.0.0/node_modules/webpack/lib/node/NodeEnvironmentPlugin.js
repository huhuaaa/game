define('webpack/lib/node/NodeEnvironmentPlugin', function(require, exports, module) {

  /*
  	MIT License http://www.opensource.org/licenses/mit-license.php
  	Author Tobias Koppers @sokra
  */
  "use strict";
  
  var NodeWatchFileSystem = require("webpack/lib/node/NodeWatchFileSystem");
  var NodeOutputFileSystem = require("webpack/lib/node/NodeOutputFileSystem");
  var NodeJsInputFileSystem = require("webpack/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem");
  var CachedInputFileSystem = require("webpack/node_modules/enhanced-resolve/lib/CachedInputFileSystem");
  
  function NodeEnvironmentPlugin() {}
  module.exports = NodeEnvironmentPlugin;
  NodeEnvironmentPlugin.prototype.apply = function (compiler) {
  	compiler.inputFileSystem = new NodeJsInputFileSystem();
  	var inputFileSystem = compiler.inputFileSystem = new CachedInputFileSystem(compiler.inputFileSystem, 60000);
  	compiler.resolvers.normal.fileSystem = compiler.inputFileSystem;
  	compiler.resolvers.context.fileSystem = compiler.inputFileSystem;
  	compiler.resolvers.loader.fileSystem = compiler.inputFileSystem;
  	compiler.outputFileSystem = new NodeOutputFileSystem();
  	compiler.watchFileSystem = new NodeWatchFileSystem(compiler.inputFileSystem);
  	compiler.plugin("run", function (compiler, callback) {
  		if (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();
  		callback();
  	});
  };

});
