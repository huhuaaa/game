define('webpack/lib/MultiEntryPlugin', function(require, exports, module) {

  /*
  	MIT License http://www.opensource.org/licenses/mit-license.php
  	Author Tobias Koppers @sokra
  */
  "use strict";
  
  var MultiEntryDependency = require("webpack/lib/dependencies/MultiEntryDependency");
  var SingleEntryDependency = require("webpack/lib/dependencies/SingleEntryDependency");
  var MultiModuleFactory = require("webpack/lib/MultiModuleFactory");
  
  function MultiEntryPlugin(context, entries, name) {
  	this.context = context;
  	this.entries = entries;
  	this.name = name;
  }
  module.exports = MultiEntryPlugin;
  MultiEntryPlugin.prototype.apply = function (compiler) {
  	compiler.plugin("compilation", function (compilation, params) {
  		var multiModuleFactory = new MultiModuleFactory();
  		var normalModuleFactory = params.normalModuleFactory;
  
  		compilation.dependencyFactories.set(MultiEntryDependency, multiModuleFactory);
  
  		compilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);
  	});
  	compiler.plugin("make", (function (compilation, callback) {
  		compilation.addEntry(this.context, new MultiEntryDependency(this.entries.map(function (e, idx) {
  			var dep = new SingleEntryDependency(e);
  			dep.loc = this.name + ":" + (100000 + idx);
  			return dep;
  		}, this), this.name), this.name, callback);
  	}).bind(this));
  };

});
