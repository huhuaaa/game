define('html-webpack-plugin/node_modules/html-minifier/node_modules/relateurl/lib/parse/index', function(require, exports, module) {

  "use strict";
  
  var hrefInfo = require("html-webpack-plugin/node_modules/html-minifier/node_modules/relateurl/lib/parse/hrefInfo");
  var parseHost = require("html-webpack-plugin/node_modules/html-minifier/node_modules/relateurl/lib/parse/host");
  var parsePath = require("html-webpack-plugin/node_modules/html-minifier/node_modules/relateurl/lib/parse/path");
  var parsePort = require("html-webpack-plugin/node_modules/html-minifier/node_modules/relateurl/lib/parse/port");
  var parseQuery = require("html-webpack-plugin/node_modules/html-minifier/node_modules/relateurl/lib/parse/query");
  var parseUrlString = require("html-webpack-plugin/node_modules/html-minifier/node_modules/relateurl/lib/parse/urlstring");
  var pathUtils = require("html-webpack-plugin/node_modules/html-minifier/node_modules/relateurl/lib/util/path");
  
  function parseFromUrl(url, options, fallback) {
  	if (url) {
  		var urlObj = parseUrl(url, options);
  
  		// Because the following occurs in the relate stage for "to" URLs,
  		// such had to be mostly duplicated here
  
  		var pathArray = pathUtils.resolveDotSegments(urlObj.path.absolute.array);
  
  		urlObj.path.absolute.array = pathArray;
  		urlObj.path.absolute.string = "/" + pathUtils.join(pathArray);
  
  		return urlObj;
  	} else {
  		return fallback;
  	}
  }
  
  function parseUrl(url, options) {
  	var urlObj = parseUrlString(url, options);
  
  	if (urlObj.valid === false) return urlObj;
  
  	parseHost(urlObj, options);
  	parsePort(urlObj, options);
  	parsePath(urlObj, options);
  	parseQuery(urlObj, options);
  	hrefInfo(urlObj);
  
  	return urlObj;
  }
  
  module.exports = {
  	from: parseFromUrl,
  	to: parseUrl
  };

});
